.question-progress-bar {
    border: solid 2px white;
    border-radius: 6px;
    padding: 6px;
    width: 80%;
    margin: 0 auto;
    height: 80%;
}

.question-progress-bar > div {
    display: block;
    height: 1em;
    border-radius: 3px;
    background-color: white;
    position: relative;
    overflow: hidden;
}
.question-card {
    margin-top: 16px;
    ion-card-content {
        padding: 16px;
        &.question-checkbox-card-content {
            padding: 0 !important;
        }
    }
}
.question-label {
    background-color: var(--ion-color-primary-tint);
    ion-card-title {
        font-size: 18px;
        color: #fff;
        // text-transform: capitalize;
    }
    ion-card-subtitle {
        font-size: 14px;
        color: #fff;
    }
    .has-popover {
        span {
            width: 80%;
        }
        .question-popover-button {
            vertical-align: middle;
        }
    }
    .question-label-button {
        font-size: 20px;
        overflow: hidden;
        .question-label-button-ripple {
            height: 36px !important;
        }
    }
    .question-label-grid {
        //this padding matches the non-action question label
        padding: 16px 8px 16px 13px;
    }
}
.question-required {
    //color: var(--ion-color-danger);
    //margin: 10px 0;
    font-style: italic;
    text-align: left;
}
.question-input {
    padding: 10px;
    width: 100%;
    color: #333;
    outline-color: var(--ion-color-primary) !important;
    &:focus {
        outline-color: var(--ion-color-primary) !important;
    }
    &:focus-visible {
        outline-color: var(--ion-color-primary) !important;
    }
    &.has-error {
        &:focus {
            outline-color: var(--ion-color-danger) !important;
        }
        &:focus-visible {
            outline-color: var(--ion-color-danger) !important;
        }
    }
}
.question-error {
    color: var(--ion-color-danger);
    margin-top: 10px;
    text-align: center;
}
textarea.has-error,
ion-list.has-error,
input.has-error,
ion-item.has-error,
ion-chip.has-error {
    border: 2px solid var(--ion-color-danger);
}
.question-photo-thumbnail {
    //text-align: center;
    img {
        width: 200px;
        height: 200px;
        padding: 10px;
        border: 1px solid var(--ion-color-light-shade);
        background-color: #ffffff;
        object-fit: cover;
    }
}
.question-datetimepicker {
    //min-width: 200px;
    background: none;
    outline: none;
    border: none;
    pointer-events: auto;
}
.question-datetimepicker-native,
.question-datetimepicker-html {
    text-align: center !important;
}
.question-numeric {
    ion-card-content {
        padding: 8px;
    }
    .chip-numeric {
        padding: 0 16px;
        .chip-numeric--icon-left {
            margin-right: 16px;
        }
        .chip-numeric--icon-right {
            margin-left: 16px;
        }
        input {
            padding: 12px;
            border-top: none;
            border-bottom: none;
            border-width: 1px;
            border-left: 1px solid;
            border-color: var(--ion-color-medium-tint);
            &.has-error {
                border: 1px solid var(--ion-color-danger) !important;
                padding: 10px !important;
            }
        }
    }
}
.question-branch {
    .list-entries-branch-pwa {
        margin-bottom: 16px;
    }
    .chip-branch {
        width: 100%;
        //margin: 16px 8px 0px 8px;
        .chip-branch--icon-left {
            margin-right: 16px;
        }
        .chip-branch--icon-right {
            margin-left: 16px;
        }
    }
}
.question-action-button {
    font-size: 16px;
}
.question-popover-button {
    font-size: 24px;
}
.question-video-player {
    width: 100%;
    margin: 16px 0;
    max-height: 200px;
}

//render smaller date & time pickers in GROUP(s)
.question-group {
    .chip-datetimepicker {
        .datetime-value {
            width: 170px;
            input[type="date"],
            input[type="time"] {
                font-size: 14px;
            }
        }
    }
}

.chip-datetimepicker {
    padding: 0 16px 0 0;
    &.entries-filters {
        padding-right: 0px !important;
        .datetime-value {
            background-color: #ffffff !important;
            input[type="date"],
            input[type="time"] {
                padding: 6px 6px 6px 40px;
            }
        }
    }
    &.device-picker {
        input[type="time"] {
            padding-left: 80px !important;
        }
    }

    .datetime-value {
        position: relative;
        width: 200px;
        background-color: var(--ion-color-secondary);
        //  border-radius: 8px;
        // padding: 10px 0; -> added for ios in core.css
        ion-datetime {
            font-size: 16px;
            font-weight: 400;
            line-height: 1.2;
        }
        input[type="date"],
        input[type="time"] {
            -webkit-appearance: none;
            -moz-appearance: none;
            appearance: none;
            font-size: 14px;
            font-weight: 400;
            z-index: 1;
            &::-webkit-inner-spin-button,
            &::-webkit-calendar-picker-indicator {
                opacity: 0;
            }
        }
        input[type="time"] {
            padding: 10px 10px 10px 60px;
            font-size: 16px !important;
        }
        input[type="date"] {
            padding: 10px 10px 10px 40px;
        }

        .time-icon,
        .date-icon-left {
            position: absolute;
            left: 16px;
            z-index: 0;
            pointer-events: none;
            position: absolute;
            top: 50%;
            transform: translateY(-50%);
        }
        .date-icon-right {
            position: absolute;
            position: absolute;
            top: 50%;
            transform: translateY(-50%);
            right: 16px;
            z-index: 0;
            pointer-events: none;
        }
    }
    //show native date and time picker buttons on the web
    //to be replaced by  https://vue3datepicker.com/
    &.web-picker {
        .datetime-value {
            input[type="date"],
            input[type="time"] {
                padding: 10px 10px 10px 20px;
                &::-webkit-inner-spin-button,
                &::-webkit-calendar-picker-indicator {
                    opacity: 1;
                }
            }
        }
    }
}
.md .question-dropdown-action-sheet {
    .action-sheet-wrapper {
        height: 90%;
        width: 90%;
        top: 0;
        border-radius: 5px;
    }
    .action-sheet-selected {
        background-color: var(--ion-color-secondary-tint);
    }
    .action-sheet-button {
        border-bottom: 1px solid var(--ion-color-medium-tint);
    }
    .action-sheet-cancel {
        color: var(--ion-color-primary);
        font-weight: 700;
        border-top: 1px solid var(--ion-color-medium-tint);
        .action-sheet-button-inner.sc-ion-action-sheet-md {
            justify-content: right;
        }
    }
}

.question-group,
.question-branch {
    padding: 0 !important;
    ion-card-content {
        padding: 0 !important;
    }
}
.possible-answers-list,
.saved-answers-list {
    .possible-answer-item,
    .saved-answer-item {
        user-select: none;
        position: relative;
        display: block;
        border-bottom: 1px solid var(--ion-color-light-shade);
        &.checkbox-checked {
            background-color: #eee;
        }
        &.radio-checked {
            background-color: #eee;
        }
        .possible-answer-label,
        .saved-answer-label {
            white-space: normal;
            font-size: 16px;
            color: #222;
        }

        .possible-answer-radio,
        .saved-answer-checkbox {
            width: 1em;
            height: 1em;
            background-color: white;
            border-radius: 50%;
            vertical-align: middle;
            border: 1px solid #ddd;
            appearance: none;
            -webkit-appearance: none;
            outline: none;
            cursor: pointer;
            &:checked {
                background-color: var(--ion-color-secondary);
                border: 1px solid #333;
            }
            margin-top: 0 !important;
            padding: 5px;
            // clip-path: circle(50% at 50% 50%); /* Set the clip path of circle*/
        }
        .possible-answer-checkbox,
        .possible-answer-radio,
        .saved-answer-checkbox {
            margin-top: 6px;
            accent-color: var(--ion-color-secondary) !important;
            transform: scale(1.6);
            // position: absolute;
            // top: 4px;
            // right: 10px;
        }
    }
    .question-dropdown-item {
        --min-height: 36px;
        --border-radius: 5px;
        --inner-padding-top: 0;
        --inner-padding-bottom: 0;
        //box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12);
        ion-icon,
        ion-label {
            padding: 0;
            margin: 0;
            font-weight: 500;
            //letter-spacing: 0.06em;
            // text-transform: uppercase;
        }
    }
}
.possible-answers-list {
    border-top: 1px solid var(--ion-color-light-shade);
}
ion-item-divider.possible-answers-serchbar-wrapper,
ion-item-divider.saved-answers-serchbar-wrapper {
    --inner-padding-start: 0;
    --inner-padding-end: 0;
    --padding-start: 0;
    --padding-end: 0;
}

// .possible-answer-item {
//     border-bottom: 1px solid var(--ion-color-light-shade);
//     display: block;
//     .radio-selected,
//     &.checkbox-checked {
//         background-color: #eee;
//     }
//     .possible-answer-label {
//         white-space: normal;
//         font-size: 16px;
//         color: #222;
//     }
// }
.question-search-remove-pick,
.question-branch-edit,
.question-branch-remove {
    font-size: 24px;
    margin-top: 5px;
}
.question-readme-content {
    .readme-padding {
        padding: 16px !important;
    }
    p {
        color: #333;
        font-size: 16px;
    }
}
.question-location-grid {
    font-size: 18px;
    ion-row.border-bottom {
        border-bottom: 1px solid var(--ion-color-light-shade);
    }
}
.dropzone {
    padding: 16px;
    border: 2px dashed var(--ion-color-medium);
    border-radius: 5px;
    font-size: 16px;
    &:hover {
        cursor: pointer;
    }
}
.dropzone-active {
    border: 2px solid var(--ion-color-primary);
    background-color: #eee;
}
.dropzone-preview {
    min-height: 200px;

    ion-avatar {
        --border-radius: 0;
    }
    .pwa-video {
        max-height: 150px;
    }
}
//PWA Location (Leaflet) *************************************
.leaflet-map-wrapper {
    height: 200px;
    outline: none;
    &::focus {
        outline: none;
    }
}
.lat-long-controls,
.address-controls {
    --padding-start: 0;
    --inner-padding-start: 0;
    --inner-padding-end: 0;
}
//imp: removed "scoped" otherwise it does not load the background image
//imp: also, loading from assets does not work so leaflet images are in
//imp: src/leaflet
//imp: I guess it is due to the jsconfig.json mapping @ to src
.leaflet-control-locate-me {
    width: 34px;
    height: 34px;
    //margin-left: 12px !important;
    background: #ffffff url(@/leaflet/images/locate-me@2x.png) no-repeat center;
}
.leaflet-control-locate-me:hover {
    cursor: pointer;
    background-color: #eeeeee;
}
.leaflet-control-layers-list {
    text-align: left;
}
.leaflet-touch .leaflet-control-layers-toggle {
    width: 30px;
    height: 30px;
}
.leaflet-retina .leaflet-control-layers-toggle {
    background-image: url(@/leaflet/images/layers@2x.png) !important;
    background-size: 26px 26px !important;
    width: 30px !important;
    height: 30px !important;
}
.leaflet-control-layers-base {
    label {
        font-size: 16px;
    }
}
input.leaflet-control-layers-selector {
    margin: 5px;
    accent-color: var(--ion-color-primary) !important;
}
.item-question-location-edit {
    border: 1px solid var(--ion-color-medium);
    border-radius: 4px;
}
.popover-question-location {
    --width: auto;
}
//*********************************************************
